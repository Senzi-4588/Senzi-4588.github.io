<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jian Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-25T16:05:55.100Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/10/26/hello-world/"/>
    <id>http://yoursite.com/2019/10/26/hello-world/</id>
    <published>2019-10-25T16:05:55.100Z</published>
    <updated>2019-10-25T16:05:55.100Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Http</title>
    <link href="http://yoursite.com/2019/10/25/Http/"/>
    <id>http://yoursite.com/2019/10/25/Http/</id>
    <published>2019-10-25T08:59:40.651Z</published>
    <updated>2019-10-19T08:27:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTTP状态码列表"><a href="#HTTP状态码列表" class="headerlink" title="HTTP状态码列表:"></a><strong>HTTP状态码列表:</strong></h1><table><thead><tr><th>状态码</th><th>状态码英文名称</th><th>中文描述</th></tr></thead><tbody><tr><td>100</td><td>Continue</td><td>继续。客户端应继续其请求</td></tr><tr><td>101</td><td>Switching Protocols</td><td>切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</td></tr><tr><td></td><td></td><td></td></tr><tr><td>200</td><td>OK</td><td>请求成功。一般用于GET与POST请求</td></tr><tr><td>201</td><td>Created</td><td>已创建。成功请求并创建了新的资源</td></tr><tr><td>202</td><td>Accepted</td><td>已接受。已经接受请求，但未处理完成</td></tr><tr><td>203</td><td>Non-Authoritative Information</td><td>非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td></tr><tr><td>204</td><td>No Content</td><td>无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td></tr><tr><td>205</td><td>Reset Content</td><td>重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td></tr><tr><td>206</td><td>Partial Content</td><td>部分内容。服务器成功处理了部分GET请求</td></tr><tr><td></td><td></td><td></td></tr><tr><td>300</td><td>Multiple Choices</td><td>多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td></tr><tr><td>301</td><td>Moved Permanently</td><td>永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td></tr><tr><td>302</td><td>Found</td><td>临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td></tr><tr><td>303</td><td>See Other</td><td>查看其它地址。与301类似。使用GET和POST请求查看</td></tr><tr><td>304</td><td>Not Modified</td><td>未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td></tr><tr><td>305</td><td>Use Proxy</td><td>使用代理。所请求的资源必须通过代理访问</td></tr><tr><td>306</td><td>Unused</td><td>已经被废弃的HTTP状态码</td></tr><tr><td>307</td><td>Temporary Redirect</td><td>临时重定向。与302类似。使用GET请求重定向</td></tr><tr><td></td><td></td><td></td></tr><tr><td>400</td><td>Bad Request</td><td>客户端请求的语法错误，服务器无法理解</td></tr><tr><td>401</td><td>Unauthorized</td><td>请求要求用户的身份认证</td></tr><tr><td>402</td><td>Payment Required</td><td>保留，将来使用</td></tr><tr><td>403</td><td>Forbidden</td><td>服务器理解请求客户端的请求，但是拒绝执行此请求</td></tr><tr><td>404</td><td>Not Found</td><td>服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面</td></tr><tr><td>405</td><td>Method Not Allowed</td><td>客户端请求中的方法被禁止</td></tr><tr><td>406</td><td>Not Acceptable</td><td>服务器无法根据客户端请求的内容特性完成请求</td></tr><tr><td>407</td><td>Proxy Authentication Required</td><td>请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td></tr><tr><td>408</td><td>Request Time-out</td><td>服务器等待客户端发送的请求时间过长，超时</td></tr><tr><td>409</td><td>Conflict</td><td>服务器完成客户端的PUT请求是可能返回此代码，服务器处理请求时发生了冲突</td></tr><tr><td>410</td><td>Gone</td><td>客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td></tr><tr><td>411</td><td>Length Required</td><td>服务器无法处理客户端发送的不带Content-Length的请求信息</td></tr><tr><td>412</td><td>Precondition Failed</td><td>客户端请求信息的先决条件错误</td></tr><tr><td>413</td><td>Request Entity Too Large</td><td>由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td></tr><tr><td>414</td><td>Request-URI Too Large</td><td>请求的URI过长（URI通常为网址），服务器无法处理</td></tr><tr><td>415</td><td>Unsupported Media Type</td><td>服务器无法处理请求附带的媒体格式</td></tr><tr><td>416</td><td>Requested range not satisfiable</td><td>客户端请求的范围无效</td></tr><tr><td>417</td><td>Expectation Failed</td><td>服务器无法满足Expect的请求头信息</td></tr><tr><td></td><td></td><td></td></tr><tr><td>500</td><td>Internal Server Error</td><td>服务器内部错误，无法完成请求</td></tr><tr><td>501</td><td>Not Implemented</td><td>服务器不支持请求的功能，无法完成请求</td></tr><tr><td>502</td><td>Bad Gateway</td><td>作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</td></tr><tr><td>503</td><td>Service Unavailable</td><td>由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td></tr><tr><td>504</td><td>Gateway Time-out</td><td>充当网关或代理的服务器，未及时从远端服务器获取请求</td></tr><tr><td>505</td><td>HTTP Version not supported</td><td>服务器不支持请求的HTTP协议的版本，无法完成处理</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;HTTP状态码列表&quot;&gt;&lt;a href=&quot;#HTTP状态码列表&quot; class=&quot;headerlink&quot; title=&quot;HTTP状态码列表:&quot;&gt;&lt;/a&gt;&lt;strong&gt;HTTP状态码列表:&lt;/strong&gt;&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;状
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>rsync</title>
    <link href="http://yoursite.com/2019/10/25/rsync/"/>
    <id>http://yoursite.com/2019/10/25/rsync/</id>
    <published>2019-10-25T08:45:55.968Z</published>
    <updated>2019-10-25T07:18:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>环境<br>操作系统：CentOS 7u3<br>源服务器：192.168.179.128<br>目标服务器：192.168.179.129<br>目的：把目标服务器上/home_test目录实时同步到源服务器的/home_test下<br>注意：配置相关端⼝和安全规则。源服务器去同步目标服务器上的内容</p><h2 id="192-168-179-128-源服务器"><a href="#192-168-179-128-源服务器" class="headerlink" title="192.168.179.128(源服务器)"></a>192.168.179.128(源服务器)</h2><h3 id="一、-安装rsync"><a href="#一、-安装rsync" class="headerlink" title="一、 安装rsync"></a>一、 安装rsync</h3><p>rhel7:<br>yum install rsync<br>systemctl start rsyncd<br>rhel6:<br>yum install rsync xinetd<br>vi /etc/xinetd.d/rsync<br>disable = no<br>/etc/init.d/xinetd start<br>注意：6里面rsync依据超级守护进程启动</p><h3 id="二、创建rsyncd-conf配置文件"><a href="#二、创建rsyncd-conf配置文件" class="headerlink" title="二、创建rsyncd.conf配置文件"></a>二、创建rsyncd.conf配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">log file = /var/log/rsyncd.log</span><br><span class="line">pidfile = /var/run/rsyncd.pid</span><br><span class="line">lock file = /var/run/rsync.lock</span><br><span class="line">secrets file = /etc/rsync.pass</span><br><span class="line">motd file = /etc/rsyncd.Motd</span><br><span class="line">[home_test]</span><br><span class="line">path = /home_test</span><br><span class="line">comment = home_test</span><br><span class="line">uid = root</span><br><span class="line">gid = root</span><br><span class="line">port = 873</span><br><span class="line">use chroot = no</span><br><span class="line">read only = no</span><br><span class="line">list = no</span><br><span class="line">max connections = 200</span><br><span class="line">timeout = 600</span><br><span class="line">auth users = user1</span><br><span class="line">hosts allow = 192.168.75.152</span><br><span class="line">hosts deny = 192.168.245.150</span><br></pre></td></tr></table></figure><p>vim /etc/rsyncd.conf #7上有默认配置文件，rhel6上没有默认文件要<br>自己创建配置文件，添加以下代码<br>log file = /var/log/rsyncd.log #遇到错误可以查看日志，很详细<br>pidfile = /var/run/rsyncd.pid<br>lock file = /var/run/rsync.lock<br>secrets file = /etc/rsync.pass #用户认证配置文件，里面保存用<br>户名称和密码，后面会创建这个文件<br>motd file = /etc/rsyncd.Motd #rsync启动时欢迎信息页面文件<br>位置<br>[home_test] #同步模块名称，自定义（不要太短了）<br>path = /home_test #rsync服务端数据目录路径<br>comment = home_test #模块名称，和[host_test]一样<br>uid = root 需要两服务器目录和文件的属主属组<br>gid = root 需要两服务器目录和文件的属主属组<br>port=873 rsync 默认端口<br>use chroot = no<br>read only = no<br>list = no #不显示rsync服务端资源列表<br>max connections = 200<br>timeout = 600<br>auth users = user1 #执行数据同步的用户名，可以设置多个，用<br>英文状态下逗号隔开<br>hosts allow = 192.168.245.147 #允许进⾏数据同步的客户端IP地<br>址，可以设置多个，用英文状态下逗号隔开<br>hosts deny = 192.168.245.150 不允许同步的ip地址，用逗号隔<br>开</p><h3 id="三、创建用户认证文件"><a href="#三、创建用户认证文件" class="headerlink" title="三、创建用户认证文件"></a>三、创建用户认证文件</h3><p>vim /etc/rsync.pass<br>user1:123456 #格式，用户名:密码，可以设置多个，每行一个用户名:密码</p><h3 id="四、设置文件权限"><a href="#四、设置文件权限" class="headerlink" title="四、设置文件权限"></a>四、设置文件权限</h3><p>chmod 600 /etc/rsyncd.conf #设置文件所有者读取、写入权限<br>chmod 600 /etc/rsync.pass #设置文件所有者读取、写入权限<br>systemctl restart rsyncd #重启rsync</p><h2 id="192-168-179-129（目标服务器）"><a href="#192-168-179-129（目标服务器）" class="headerlink" title="192.168.179.129（目标服务器）"></a>192.168.179.129（目标服务器）</h2><h3 id="一、安装rsync、xinetd"><a href="#一、安装rsync、xinetd" class="headerlink" title="一、安装rsync、xinetd"></a>一、安装rsync、xinetd</h3><p>yum - y install rsync xinetd</p><h3 id="二、创建密码文件"><a href="#二、创建密码文件" class="headerlink" title="二、创建密码文件"></a>二、创建密码文件</h3><p>vim /etc/passwd.txt<br>123456 #密码<br>注意：这里的密码和客户端的密码是一样的<br>chmod 600 /etc/passwd.txt #设置文件权限，只设置文件所有者具<br>有读取、写入权限</p><h3 id="三、测试同步"><a href="#三、测试同步" class="headerlink" title="三、测试同步"></a>三、测试同步</h3><p>创建好测试目录</p><p>mkdir /home_test(源服务器和目标服务器都要创建)</p><p>rsync -avH –port=873 –progress –delete /home_test <a href="mailto:user1@192.168.179.128" target="_blank" rel="noopener">user1@192.168.179.128</a>::home_test –password-file=/etc/passwd.txt</p><p>/home_test 是指服务端数据⽬录<br>user1 是客户端设置好的账号<br>home_test 是指客户端设置的模块名称<br>同步失败查看文后的错误解决方法</p><h3 id="四、安装Inotify-tools工具，实时触发rsync进行同步"><a href="#四、安装Inotify-tools工具，实时触发rsync进行同步" class="headerlink" title="四、安装Inotify-tools工具，实时触发rsync进行同步"></a>四、安装Inotify-tools工具，实时触发rsync进行同步</h3><p>1、查看服务器内核是否支持inotify （下面输出说明支持）<br>ll /proc/sys/fs/inotify<br>-rw-r–r– 1 root root 0 Mar 7 02:17 max_queued_events<br>-rw-r–r– 1 root root 0 Mar 7 02:17 max_user_instances<br>-rw-r–r– 1 root root 0 Mar 7 02:17 max_user_watches<br>2、安装inotify-tools<br>wget <a href="http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz" target="_blank" rel="noopener">http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz</a><br>tar zxvf inotify-tools-3.14.tar.gz<br>cd inotify-tools-3.14<br>./configure –prefix=/usr/local/inotify &amp;&amp; make &amp;&amp; make<br>install</p><p>（ps:如果编译安装有错的话，下载依赖包</p><p>yum install -y <em>epel</em> gcc-c++ unixODBC unixODBC-devel openssl-devel ncurses-devel）</p><p>3、设置系统环境变量，添加软连接</p><p>echo “PATH=/usr/local/inotify/bin:$PATH” &gt;&gt;/etc/profile.d/inotify.sh<br>source /etc/profile.d/inotify.sh<br>echo “/usr/local/inotify/lib” &gt;/etc/ld.so.conf.d/inotify.conf<br>ln -s /usr/local/inotify/include /usr/include/inotify<br>ln -s /usr/local/inotify/lib/libnotifytools.so.0 /usr/lib64</p><p>4、修改inotify默认参数（inotify默认内核参数值太小）<br>查看系统默认参数值<br>sysctl -a | grep max_queued_events<br>结果是：fs.inotify.max_queued_events = 16384<br>sysctl -a | grep max_user_watches<br>结果是：fs.inotify.max_user_watches = 8192<br>sysctl -a | grep max_user_instances<br>结果是：fs.inotify.max_user_instances = 128</p><p>5、修改参数：<br>sysctl -w fs.inotify.max_queued_events=”99999999”<br>sysctl -w fs.inotify.max_user_watches=”99999999”<br>sysctl -w fs.inotify.max_user_instances=”65535”<br>或者 vim /etc/sysctl.conf #添加以下代码<br>fs.inotify.max_queued_events=99999999<br>fs.inotify.max_user_watches=99999999<br>fs.inotify.max_user_instances=65535<br>参数说明<br>max_queued_events：<br>inotify队列最大长度，如果值太小，会出现”** Event Queue<br>Overflow **”错误，导致监控文件不准确<br>max_user_watches：</p><p>要同步的文件包含多少目录，可以用：find /home_test -<br>type d | wc -l 统计，必须保证max_user_watches值大于统<br>计结果（这里/home_test为同步文件目录）<br>max_user_instances：<br>每个用户创建inotify实例最大值</p><p>6、创建脚本，实时触发rsync进文同步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/inotify/rsync.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">srcdir=&quot;/home_test&quot;</span><br><span class="line">dstdir=&quot;home_test&quot;</span><br><span class="line">excludedir=&quot;/usr/local/inotify/exclude.list&quot;</span><br><span class="line">rsyncuser=&quot;user1&quot;</span><br><span class="line">rsyncpassdir=&quot;/etc/passwd.txt&quot;</span><br><span class="line">dstip=&quot;192.168.75.151&quot;</span><br><span class="line">for ip in $dstip</span><br><span class="line">do</span><br><span class="line">rsync -avH --port=873 --progress --delete --exclude-from=$excludedir $srcdir $rsyncuser@$ip::$dstdir --password-file=$rsyncpassdir</span><br><span class="line">done</span><br><span class="line">/usr/local/inotify/bin/inotifywait -mrq --timefmt &apos;%d/%m/%y %H:%M&apos; --format &apos;%T %w%f%e&apos; -e close_write,modify,delete,create,attrib,move $srcdir | while read file</span><br><span class="line">do</span><br><span class="line">for ip in $dstip</span><br><span class="line">do</span><br><span class="line">rsync -avH --port=873 --progress --delete --exclude-from=$excludedir $srcdir $rsyncuser@$ip::$dstdir --password-file=$rsyncpassdir</span><br><span class="line">echo &quot;$&#123;file&#125; was rsynced&quot; &gt;&gt; /tmp/rsync.log 2&gt;&amp;1</span><br><span class="line">done</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>修改权限<br>chmod +x /usr/local/inotify/rsync.sh<br>脚本参数说明：<br>excludedir=/usr/local/inotify/exclude.list<br>不需要同步的目录，如果有多个，每一行写一个目录，使用相<br>对于同步模块的路径；</p><p>7、设置脚本开机自动执行<br>vim /etc/rc.d/rc.local #编辑，在最后添加一行<br>sh /usr/local/inotify/rsync.sh &amp; ＃设置开机开动在后台运行<br>脚本<br>chmod +x /etc/rc.d/rc.local<br>systemctl enable rc-local</p><p>inotify参数<br>-m 是保持一直监听<br>-r 是递归查看目录<br>-q 是打印出事件<br>-e create,move,delete,modify,attrib 是指 “监听 创建 移动 删除 写入 权限” 事件</p><p>rsync参数<br>-v, –verbose 详细模式输出<br>-q, –quiet 精简输出模式<br>-c, –checksum 打开校验开关，强制对文件传输进行校验<br>-a, –archive 归档模式，表示以递归方式传输文件，并保持<br>所有文件属性，等于-rlptgoD<br>-r, –recursive 对子目录以递归模式处理<br>-R, –relative 使用相对路径信息<br>-b, –backup 创建备份，也就是对于目的已经存在有同样的<br>文件名时，将老的文件重新命名为<del>filename。可以使用–<br>suffix选项来指定不同的备份文件前缀。<br>–backup-dir 将备份文件(如</del>filename)存放在在目录下。<br>-suffix=SUFFIX 定义备份文件前缀<br>-u, –update 仅仅进行更新，也就是跳过所有已经存在于<br>DST，并且文件时间晚于要备份的文件。(不覆盖更新的⽂件)<br>-l, –links 保留软链结<br>-L, –copy-links 想对待常规文件一样处理软链结<br>–copy-unsafe-links 仅仅拷备指向SRC路径目录树以外的链<br>结<br>–safe-links 忽略指向SRC路径目录树以外的链结<br>-H, –hard-links 保留硬链结<br>-p, –perms 保持文件权限<br>-o, –owner 保持文件属主信息<br>-g, –group 保持文件属组信息<br>-D, –devices 保持设备文件信息<br>-t, –times 保持文件时间信息<br>-S, –sparse 对稀疏文件进行特殊处理以节省DST的空间<br>-n, –dry-run现实哪些文件将被传输<br>-W, –whole-file 拷备文件，不进行增量检测<br>-x, –one-file-system 不要跨越文件系统边界<br>-B, –block-size=SIZE 检验算法使用的块尺寸，默认是700<br>字节<br>-e, –rsh=COMMAND 指定使用rsh、ssh方式进行数据同步<br>–rsync-path=PATH 指定远程服务器上的rsync命令所在路<br>径信息<br>-C, –cvs-exclude 使用和CVS一样的方法自动忽略文件，用<br>来排除那些不希望传输的文件<br>–existing 仅仅更新那些已经存在于DST的文件，而不备份<br>那些新创建的文件<br>–delete 删除那些DST中SRC没有的文件<br>–delete-excluded 同样删除接收端那些被该选项指定排除的<br>文件<br>–delete-after 传输结束以后再删除<br>–ignore-errors 及时出现IO错误也进行删除<br>–max-delete=NUM 最多删除NUM个文件<br>–partial 保留那些因故没有完全传输的文件，以是加快随后<br>的再次传输<br>–force 强制删除⽬录，即使不为空<br>–numeric-ids 不将数字的用户和组ID匹配为用户名和组名<br>–timeout=TIME IP超时时间，单位为秒<br>-I, –ignore-times 不跳过那些有同样的时间和长度的文件<br>–size-only 当决定是否要备份文件时，仅仅察看文件大小而<br>不考虑文件时间<br>–modify-window=NUM 决定文件是否时间相同时使用的时<br>间戳窗口，默认为0<br>-T –temp-dir=DIR 在DIR中创建临时文件<br>–compare-dest=DIR 同样比较DIR中的文件来决定是否需要<br>备份<br>-P 等同于 –partial<br>–progress 显示备份过程<br>-z, –compress 对备份的文件在传输时进行压缩处理<br>–exclude=PATTERN 指定排除不需要传输的文件模式<br>–include=PATTERN 指定不排除而需要传输的文件模式</p><h3 id="五、测试"><a href="#五、测试" class="headerlink" title="五、测试"></a>五、测试</h3><p>在目标文件/home_test下创建a.txt</p><p>cat a.txt</p><p>test123</p><p>执行脚本进行手动同步</p><p>sh /usr/local/inotify/rsync.sh</p><p>（ps：报错</p><p>rsync: failed to open exclude file /usr/local/inotify/exclude.list: No such file or directory (2)<br>rsync error: error in file IO (code 11) at exclude.c(1178) [client=3.1.2]<br>/usr/local/inotify/rsync.sh: line 12: /usr/local/inotify/bin/inotifywait: No such file or directory</p><p>mkdir -p /usr/local/inotify/exclude.list</p><p>mkdir -p /usr/local/inotify/bin/inotifywait</p><p>chmod a+x /usr/local/inotify/bin/inotifywait</p><p>）</p><p>在源服务器/hmoe_test下可以看见</p><p>cat a.txt</p><p>test123</p><h2 id="错误排查"><a href="#错误排查" class="headerlink" title="错误排查"></a>错误排查</h2><p>问题一：<br>@ERROR: chroot failed<br>rsync error: error starting client-server protocol (code 5) at<br>main.c(1522) [receiver=3.0.3]<br>原因：<br>服务器端的目录不存在或无权限，创建目录并修正权限可解决问题。</p><p>问题二：<br>@ERROR: auth failed on module tee<br>rsync error: error starting client-server protocol (code 5) at<br>main.c(1522) [receiver=3.0.3]<br>原因：<br>服务器端该模块（tee）需要验证用户名密码，但客户端没有提供正确的用户名密码，认证失败。<br>提供正确的用户名密码解决此问题。</p><p>问题三：<br>@ERROR: Unknown module ‘tee_nonexists’<br>rsync error: error starting client-server protocol (code 5) at<br>main.c(1522) [receiver=3.0.3]<br>原因：<br>服务器不存在指定模块。提供正确的模块名或在服务器端修改成你要<br>的模块以解决问题。</p><p>问题1：<br>在client上遇到问题：<br>rsync -auzv –progress –password-file=/etc/rsync.pas<br><a href="mailto:root@192.168.133.128" target="_blank" rel="noopener">root@192.168.133.128</a>::backup /home/<br>rsync: could not open password file “/etc/rsync.pas”: No such file or<br>directory (2)<br>Password:<br>@ERROR: auth failed on module backup<br>rsync error: error starting client-server protocol (code 5) at<br>main.c(1506) [Receiver=3.0.7]<br>遇到这个问题：client端没有设置/etc/rsync.pas这个文件，而在使用<br>rsync命令的时候，加了这个参数–<br>password-file=/etc/rsync.pas</p><p>问题2：<br>rsync -auzv –progress –password-file=/etc/rsync.pas<br><a href="mailto:root@192.168.133.128" target="_blank" rel="noopener">root@192.168.133.128</a>::backup /home/<br>@ERROR: auth failed on module backup<br>rsync error: error starting client-server protocol (code 5) at<br>main.c(1506) [Receiver=3.0.7]<br>遇到这个问题：client端已经设置/etc/rsync.pas这个文件，里面也设置<br>了密码111111，和服务器一致，但是<br>服务器段设置有错误，服务器端应该设置/etc/rsync.pas ，里面内容<br>root:111111 ,这里登陆名不可缺少</p><p>问题3：<br>rsync -auzv –progress –password-file=/etc/rsync.pas<br><a href="mailto:root@192.168.133.128" target="_blank" rel="noopener">root@192.168.133.128</a>::backup /home/<br>@ERROR: chdir failed<br>rsync error: error starting client-server protocol (code 5) at<br>main.c(1506) [Receiver=3.0.7]<br>遇到这个问题，是因为服务器端的/home/backup 其中backup这个目<br>录并没有设置，所以提示：chdir failed</p><p>问题4：<br>rsync: write failed on “/home/backup2010/wensong”: No space left<br>on device (28)<br>rsync error: error in file IO (code 11) at receiver.c(302)<br>[receiver=3.0.7]<br>rsync: connection unexpectedly closed (2721 bytes received so far)<br>[generator]<br>rsync error: error in rsync protocol data stream (code 12) at io.c(601)<br>[generator=3.0.7]<br>磁盘空间不够，所以无法操作。<br>可以通过df /home/backup2010 来查看可用空间和已用空间</p><p>问题5：网络收集问题<br>1、权限问题<br>类似如下的提示：rsync: opendir “/kexue” (in dtsChannel) failed:<br>Permission denied (13)注意查看同步的目录权限是否为755<br>2、time out<br>rsync: failed to connect to 203.100.192.66: Connection timed out<br>(110)<br>rsync error: error in socket IO (code 10) at clientserver.c(124)<br>[receiver=3.0.5]<br>检查服务器的端⼝netstat –tunlp，远程telnet测试。<br>可能因为客户端或者服务端的防火墙开启 导致⽆法通信，可以设置规<br>则放行 rsync（873端口） 或者直接关闭防火墙。<br>还有一种在同步过程中可能会提示没有权限 （将同步目录加上<br>SvcwRsync全部权限即可，更简单的方法就是将SvcwRsync设为管理<br>员即可）<br>3、服务未启动<br>rsync: failed to connect to 10.10.10.170: Connection refused (111)<br>rsync error: error in socket IO (code 10) at clientserver.c(124)<br>[receiver=3.0.5]<br>启动服务：rsync –daemon –config=/etc/rsyncd.conf<br>4、磁盘空间满<br>rsync: recv_generator: mkdir “/teacherclubBackup/rsync……” failed:<br>No space left on device (28)<br><strong>* Skipping any contents from this failed directory *</strong><br>5、Ctrl+C或者大量文件<br>rsync error: received SIGINT, SIGTERM, or SIGHUP (code 20) at<br>rsync.c(544) [receiver=3.0.5]<br>rsync error: received SIGINT, SIGTERM, or SIGHUP (code 20) at<br>rsync.c(544) [generator=3.0.5]<br>说明：导致此问题多半是服务端服务没有被正常启动，到服务器上去<br>查查服务是否有启动，然后查看下 /var/run/rsync.pid 文件是否存在，最干脆的方法是杀死已经启动了服务，然后再次启动服务或者让脚本加入系统启动服务级别然后shutdown -r now服务器<br>6、xnetid启动<br>rsync: read error: Connection reset by peer (104)<br>rsync error: error in rsync protocol data stream (code 12) at io.c(759)<br>[receiver=3.0.5]<br>查看rsync日志<br>rsync: unable to open configuration file “/etc/rsyncd.conf”: No such<br>file or directory<br>xnetid查找的配置文件位置默认是/etc下，根据具体情况创建软链接。<br>例如：<br>ln -s /etc/rsyncd/rsyncd.conf /etc/rsyncd.conf<br>或者更改指定默认的配置文件路径，在/etc/xinetd.d/rsync配置文件<br>中。<br>Rsync configure:<br>配置一：<br>ignore errors<br>说明：这个选项最好加上，否则再很多crontab的时候往往发生错误你也未可知，因为你不可能天天去看每时每刻去看log，不加上这个出现错误的几率相对会很高，因为任何大点的项目和系统，磁盘IO都是一个瓶颈<br>Rsync error：<br>错误一：<br>@ERROR: auth failed on module xxxxx<br>rsync: connection unexpectedly closed (90 bytes read so far)<br>rsync error: error in rsync protocol data stream (code 12) at io.c(150)<br>说明：这是因为密码设置错了，无法登入成功，检查一下rsync.pwd，看客服是否匹配。还有服务器端没启动rsync 服务也会出现这种情况。<br>错误二：<br>password file must not be other-accessible<br>continuing without password file<br>Password:<br>说明：这是因为rsyncd.pwd rsyncd.sec的权限不对，应该设置为<br>600。如：chmod 600 rsyncd.pwd</p><p>错误三：<br>@ERROR: chroot failed<br>rsync: connection unexpectedly closed (75 bytes read so far)<br>rsync error: error in rsync protocol data stream (code 12) at io.c(150)<br>说明：这是因为你在 rsync.conf 中设置的 path 路径不存在，要新建目录才能开启同步</p><p>错误四：<br>rsync: failed to connect to 218.107.243.2: No route to host (113)<br>rsync error: error in socket IO (code 10) at clientserver.c(104)<br>[receiver=2.6.9]<br>说明：防火墙问题导致，这个最好先彻底关闭防火墙，排错的基本法<br>就是这样，无论是S还是C，还有ignore errors选项问题也会导致</p><p>错误五：<br>@ERROR: access denied to www from unknown (192.168.1.123)<br>rsync: connection unexpectedly closed (0 bytes received so far)<br>[receiver]<br>rsync error: error in rsync protocol data stream (code 12) at io.c(359)<br>说明：此问题很明显，是配置选项host allow的问题，初学者喜欢一个允许段做成一个配置，然后模块又是同一个，致使导致</p><p>错误六：<br>rsync error: received SIGINT, SIGTERM, or SIGHUP (code 20) at<br>rsync.c(244) [generator=2.6.9]<br>rsync error: received SIGUSR1 (code 19) at main.c(1182)<br>[receiver=2.6.9]<br>说明：导致此问题多半是服务端服务没有被正常启动，到服务器上去<br>查查服务是否有启动，然后查看下 /var/run/rsync.pid 文件是否存在，最干脆的方法是杀死已经启动了服务，然后再次启动服务或者让脚本加入系统启动服务级别然后shutdown -r now服务器</p><p>错误七：<br>rsync: read error: Connection reset by peer (104)<br>rsync error: error in rsync protocol data stream (code 12) at io.c(604)<br>[sender=2.6.9]<br>说明：原数据目录里⾥没有数据存在<br>rsync 错误与解决⽅法整理补充篇<br>由于我们经常使用rsync进行服务器文件的同步工作，但在配置过程<br>中，会出现很多问题，下面的错误基本上都是通过客户端返回的错误<br>进行分析。<br>另外查找错误过程中也学到了一个查看错误的⽅法-查看系统日志，我们操作的每步都会在日志上有说明，有时候报错看不懂，日志上都写的清清楚楚。<br>命令：cat /var/log/messages</p><p>问题一：<br>@ERROR: auth failed on module bachup<br>rsync error: error starting client-server protocol (code 5) at<br>main.c(1522) [receiver=3.0.3]<br>原因：服务器端该模块（backup）需要验证⽤户名密码，但客户端没<br>有提供正确的用户名密码，认证失败。 提供正确的用户名密码解决此<br>问题。<br>这个问题比较蠢，如果可能你和我⼀样明明在模块里写了密码文件，<br>怎么都不通，这个时候我劝你先检查一下所写模块中是不是和下图一<br>样。比如，某处多了个s。</p><p>问题二：110错误 -time out<br>rsync: failed to connect to 203.100.192.66: Connection timed out<br>(110)<br>rsync error: error in socket IO (code 10) at clientserver.c(124)<br>[receiver=3.0.5]<br>原因：<br>检查服务器的端口netstat –tunlp，远程telnet测试。 可能因为客户端<br>或者服务端的防火墙开启 导致无法通信，可以设置规则放行rsync（873端口） 或者直接关闭防⽕墙。<br>在这里博主是重启过服务器，然后就报110了，直接开启rsync服务就<br>行。<br>命令：service rsyncd start<br>问题三：113错误 -防火墙<br>rsync: failed to connect to 218.107.243.2: No route to host (113) rsync<br>error: error in socket IO (code 10) at clientserver.c(104)<br>[receiver=2.6.9]<br>原因：<br>防火墙问题导致，这个很简单，关闭防火墙就可以。不过博主还是被<br>困在这里几个小时，因为linux防火墙分两种：<br>-iptable和-firewall<br>认识到这个问题首先查看系统的防火墙种类，查看防火墙状态即可<br>service iptable status<br>firewall-cmd –state<br>确定防火墙种类后再按对应方法将防火墙关闭即可。<br>问题四：1516错误<br>@ERROR: auth failed on module backup<br>rsync error: error starting client-server protocol (code 5) at<br>main.c(1516) [Receiver=3.0.9]<br>解决：这个问题错误差别很大，可查看系统日志查看错误，再搜索解<br>决方法。<br>注意：一般这种情况都建立在可以连通的基础。去服务端查看系统日<br>志，可以查看相关错误。<br>命令：cat /var/log/massages<br>cat /var/log/rsyncd.log</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;环境&lt;br&gt;操作系统：CentOS 7u3&lt;br&gt;源服务器：192.168.179.128&lt;br&gt;目标服务器：192.168.179.129&lt;br&gt;目的：把目标服务器上/home_test目录实时同步到源服务器的/home_test下&lt;br&gt;注意：配置相关端⼝和安全规则。源
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
